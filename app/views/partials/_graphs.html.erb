<div class='with-3d-shadow with-transitions'>
	<h2>Tipos de delitos</h2>
	<svg id="test1" class="mypiechart"></svg>

	<h2>Tipos de delitos</h2>
	<svg id="test2" class="mypiechart"></svg>
</div>

<script>

var my_data = '<%= raw(@data.to_json) %>';
 	console.log(my_data);

 	try {
 		var jsObject = JSON.parse(my_data);
 		console.log(jsObject);
 	} catch (e){
 		console.error("Parsing error:", e);
 	}

 	var testdata2 = {} 	

 	jsObject["features"].forEach(function(entry) {
 		if (testdata2.length === 0){
 			testdata2[entry["properties"]["delito_desc"]] = 1;
 		}
 		else if (entry["properties"]["delito_desc"] in testdata2 )
 			testdata2[entry["properties"]["delito_desc"]] += 1;
 		else 
 			testdata2[entry["properties"]["delito_desc"]] = 1;

    console.log(entry["properties"]["delito_desc"]);
});
 	console.log(testdata2)

 	var testdata =[]

 	for (var k in testdata2){
 		if (testdata2.hasOwnProperty(k)){

 			testdata.push({key: k, y:testdata2[k]});
 		}
 	}


	nv.addGraph(function() {
	    var width = 500,
	        height = 500;

	    var chart = nv.models.pieChart()
	        .x(function(d) { return d.key })
	        .y(function(d) { return d.y })
	        .color(d3.scale.category10().range())
	        .width(width)
	        .height(height);

	      d3.select("#test1")
	          .datum(testdata)
	        .transition().duration(1200)
	          .attr('width', width)
	          .attr('height', height)
	          .call(chart);

	    chart.dispatch.on('stateChange', function(e) { nv.log('New State:', JSON.stringify(e)); });

	    return chart;
	});

	nv.addGraph(function() {

	    var width = 500,
	        height = 500;

	    var chart = nv.models.pieChart()
	        .x(function(d) { return d.key })
	        //.y(function(d) { return d.value })
	        //.labelThreshold(.08)
	        //.showLabels(false)
	        .color(d3.scale.category10().range())
	        .width(width)
	        .height(height)
	        .donut(true);

	    chart.pie
	        .startAngle(function(d) { return d.startAngle/2 -Math.PI/2 })
	        .endAngle(function(d) { return d.endAngle/2 -Math.PI/2 });

	      //chart.pie.donutLabelsOutside(true).donut(true);

	      d3.select("#test2")
	          //.datum(historicalBarChart)
	          .datum(testdata)
	        .transition().duration(1200)
	          .attr('width', width)
	          .attr('height', height)
	          .call(chart);

	    return chart;
	});



</script>